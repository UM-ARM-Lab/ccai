Importing module 'gym_38' (/home/fanyang/Downloads/IsaacGym_Preview_4_Package/isaacgym/python/isaacgym/_bindings/linux-x86_64/gym_38.so)
Setting GYM_USD_PLUG_INFO_PATH to /home/fanyang/Downloads/IsaacGym_Preview_4_Package/isaacgym/python/isaacgym/_bindings/linux-x86_64/usd/plugInfo.json
PyTorch version 2.2.1
Device count 2
/home/fanyang/Downloads/IsaacGym_Preview_4_Package/isaacgym/python/isaacgym/_bindings/src/gymtorch
ninja: no work to do.
CCAI_PATH /home/fanyang/github/ccai
Not connected to PVD
Physics Engine: PhysX
Physics Device: cpu
GPU Pipeline: disabled
Using VHACD cache directory '/home/fanyang/.isaacgym/vhacd'
Found existing convex decomposition for mesh '/home/fanyang/github/isaacgym-arm-envs/isaac_victor_envs/assets/xela_models/mesh/allegro/base_ns.stl'
Found existing convex decomposition for mesh '/home/fanyang/github/isaacgym-arm-envs/isaac_victor_envs/assets/xela_models/mesh/allegro/link_1.0.stl'
Found existing convex decomposition for mesh '/home/fanyang/github/isaacgym-arm-envs/isaac_victor_envs/assets/xela_models/mesh/ft_c.stl'
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0),) -0.014823855832219124
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, -1.0),) 0.0018553576664999127
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, 1.0),) -0.004779332783073187
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0),) -0.01524016261100769
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, 1.0), (-1.0, -1.0)) 0.000543928355909884
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, 1.0), (1.0, -1.0)) -0.020095016807317734
Contact sequence search time: 23.91733812300663
['index_middle', 'index']
0 index_middle
Sampling time 3.335024533997057
Solve time for step 18.571857929229736
Solve time for step 3.989961862564087
Solve time for step 4.0914764404296875
Solve time for step 3.902156352996826
Solve time for step 3.961874008178711
Solve time for step 3.807109832763672
Solve time for step 3.7601850032806396
Solve time for step 3.4999561309814453
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0114, device='cuda:1')
Adjusting goal to tensor(-0.0314, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.011355528607964516
2 ((1.0, 1.0),) -0.011355528607964516
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (-1.0, -1.0)) 0.00037256572977639735
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, 1.0), (-1.0, 1.0)) -0.028216898441314697
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, 1.0), (1.0, -1.0)) -0.029826702550053596
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.03909986466169357
Contact sequence search time: 15.444818172007217
['index', 'index']
1 index
Sampling time 3.4646809269906953
Solve time for step 18.56954526901245
Solve time for step 4.591956853866577
Solve time for step 4.497046709060669
Solve time for step 4.433161020278931
Solve time for step 4.368788719177246
Solve time for step 10.2837495803833
Solve time for step 4.488828659057617
Solve time for step 8.088757991790771
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0242, device='cuda:1')
Adjusting goal to tensor(-0.0442, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.02424413338303566
2 ((1.0, -1.0),) -0.02424413338303566
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (1.0, -1.0)) -0.042086921632289886
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, -1.0)) -0.00010014463623519987
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.05496795475482941
Contact sequence search time: 16.430556334002176
['index', 'index']
2 index
Sampling time 4.719183374007116
Solve time for step 41.17591905593872
Solve time for step 6.349757194519043
Solve time for step 9.15699577331543
Solve time for step 9.099218368530273
Solve time for step 8.534842491149902
Solve time for step 8.301809310913086
Solve time for step 7.882303237915039
Solve time for step 6.041213035583496
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0352, device='cuda:1')
Adjusting goal to tensor(-0.0552, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.03516477346420288
2 ((1.0, -1.0),) -0.03516477346420288
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (1.0, -1.0)) -0.05234409123659134
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0)) -0.034280769526958466
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.04473711550235748
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0003558996831998229
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04464536905288696
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.04377444088459015
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05596074461936951
Contact sequence search time: 36.88760632900812
['middle', 'index', 'index']
3 middle
Sampling time 5.081929284991929
Solve time for step 38.72655129432678
Solve time for step 8.946590900421143
Solve time for step 8.846145391464233
Solve time for step 8.232187271118164
Solve time for step 8.436748027801514
Solve time for step 9.120112419128418
Solve time for step 8.12461519241333
Solve time for step 7.729796409606934
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0589, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((-1.0, 1.0),) -0.058928195387125015
2 ((-1.0, 1.0),) -0.058928195387125015
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (1.0, -1.0)) -0.04417284205555916
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0)) -0.04326104745268822
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0)) -0.04746673256158829
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05669731646776199
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.00048102831351570785
8 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05889620631933212
9 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.048525914549827576
10 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (1.0, 1.0)) -0.046900004148483276
11 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0003069149097427726
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
12 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.04500671103596687
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
13 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.00027083297027274966
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
14 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0), (-1.0, -1.0)) 0.0004480471252463758
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
15 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0), (1.0, -1.0)) -0.03844546154141426
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
16 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0), (1.0, -1.0), (1.0, 1.0)) -0.043703593313694
17 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.04735895246267319
18 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0005937755922786891
19 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.05203109234571457
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
20 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0004796974244527519
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
21 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05373900383710861
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
22 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0)) -0.04932049289345741
23 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04934659227728844
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
24 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.052643001079559326
25 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05204646661877632
26 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0004454666341189295
27 ((-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0005884919664822519
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
28 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05582045391201973
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
29 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0)) -0.04218348115682602
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
30 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (-1.0, -1.0)) 0.0005256893928162754
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
31 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (-1.0, -1.0), (-1.0, -1.0)) 0.00036386531428433955
32 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (1.0, -1.0)) -0.04961895942687988
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
33 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0003018863208126277
34 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0)) -0.04379821568727493
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
35 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, 1.0)) -0.0433700755238533
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
36 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, 1.0), (1.0, -1.0)) -0.05092274397611618
37 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, -1.0)) 0.0002659213787410408
38 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, 1.0)) -0.05122508853673935
39 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, 1.0)) -0.04689422622323036
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
40 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, 1.0), (1.0, 1.0)) -0.043872907757759094
41 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (-1.0, 1.0)) -0.05261671915650368
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
42 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.048974912613630295
43 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0005447015864774585
44 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, 1.0)) -0.04269782081246376
45 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.044349078088998795
46 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (-1.0, -1.0), (1.0, -1.0)) -0.04116446524858475
47 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0)) -0.05494048073887825
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
48 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (1.0, 1.0)) -0.04997185617685318
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
49 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0)) -0.0497790090739727
50 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0)) -0.04880502447485924
51 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) -6.485718040494248e-05
52 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.045694783329963684
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
53 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.052501071244478226
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
54 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05080385506153107
55 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0001730146905174479
56 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) 0.00013776513515040278
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
57 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, -1.0), (-1.0, -1.0)) -0.00016112555749714375
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
58 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04913712665438652
59 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, -1.0)) -0.04999819025397301
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
60 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.00015524598711635917
61 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.04994160681962967
62 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, -1.0), (-1.0, 1.0)) -0.03182559832930565
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
63 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, -1.0)) 1.1966039892286062e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
64 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (1.0, 1.0)) -0.049014147371053696
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
65 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (1.0, 1.0), (-1.0, 1.0)) -0.05980856716632843
66 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05172017216682434
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
67 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.060810238122940063
Contact sequence search time: 178.2344104329968
['index', 'index', 'index']
4 index
Sampling time 4.4319198169978335
Solve time for step 36.41022706031799
Solve time for step 9.374850988388062
Solve time for step 9.708245277404785
Solve time for step 8.748611211776733
Solve time for step 6.821903228759766
Solve time for step 8.812931060791016
Solve time for step 9.042034149169922
Solve time for step 8.325725317001343
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0),) -0.015809033066034317
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, -1.0),) 0.0015553059056401253
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, 1.0),) -0.00443460326641798
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, 1.0), (-1.0, 1.0)) -0.02210395783185959
Contact sequence search time: 16.634789999006898
['index_middle', 'middle']
0 index_middle
Sampling time 3.589618124999106
Solve time for step 18.933940410614014
Solve time for step 4.721526145935059
Solve time for step 4.161809206008911
Solve time for step 4.120741128921509
Solve time for step 3.8607091903686523
Solve time for step 3.799665927886963
Solve time for step 3.8297805786132812
Solve time for step 3.564178705215454
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0090, device='cuda:1')
Adjusting goal to tensor(-0.0290, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.008974915370345116
2 ((1.0, 1.0),) -0.008974915370345116
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (1.0, 1.0)) -0.015652045607566833
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, 1.0), (-1.0, -1.0)) 0.0002510695776436478
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, 1.0), (-1.0, 1.0)) -0.03308397904038429
Contact sequence search time: 11.828928026996437
['middle']
1 middle
Sampling time 3.445729515005951
Solve time for step 18.75031876564026
Solve time for step 4.353666305541992
Solve time for step 4.311291694641113
Solve time for step 4.62938117980957
Solve time for step 4.716912031173706
Solve time for step 4.654243469238281
Solve time for step 4.438561677932739
Solve time for step 4.392896890640259
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0201, device='cuda:1')
Adjusting goal to tensor(-0.0401, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.020142825320363045
2 ((-1.0, 1.0),) -0.020142825320363045
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (-1.0, -1.0)) 0.00046684304834343493
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (1.0, -1.0)) -0.032929569482803345
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((-1.0, 1.0), (-1.0, 1.0)) -0.039912670850753784
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.04783274233341217
Contact sequence search time: 15.543995875006658
['index', 'index']
2 index
Sampling time 3.6419840970047517
Solve time for step 18.63217520713806
Solve time for step 4.5150299072265625
Solve time for step 4.474294424057007
Solve time for step 4.303043603897095
Solve time for step 4.62204909324646
Solve time for step 4.2561118602752686
Solve time for step 4.673593521118164
Solve time for step 4.269401550292969
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0345, device='cuda:1')
Adjusting goal to tensor(-0.0545, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.034502286463975906
2 ((1.0, -1.0),) -0.034502286463975906
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, -1.0)) 0.0001327871432295069
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (1.0, -1.0)) -0.0470612570643425
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (-1.0, 1.0)) -0.046901751309633255
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.049423374235630035
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04931904748082161
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.054944753646850586
Contact sequence search time: 23.70406602100411
['index', 'middle', 'index', 'index']
3 index
Sampling time 3.6803504529962083
Solve time for step 19.58607792854309
Solve time for step 5.005974769592285
Solve time for step 4.509232997894287
Solve time for step 4.441761493682861
Solve time for step 4.548584699630737
Solve time for step 4.24608039855957
Solve time for step 4.470310688018799
Solve time for step 4.226449489593506
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0452, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((1.0, -1.0),) -0.04519809037446976
2 ((1.0, -1.0),) -0.04519809037446976
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, 1.0)) -0.04794257879257202
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0004978925571776927
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, -1.0)) -0.052887290716171265
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (-1.0, -1.0)) 7.519823702750728e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04940275475382805
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05522151663899422
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 7.639831164851785e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05938665196299553
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
11 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04587915167212486
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
12 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.051036518067121506
13 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0005590483779087663
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
14 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0006020620348863304
15 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0006318055093288422
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
16 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0004716299008578062
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
17 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0), (-1.0, -1.0)) 0.0005418042419478297
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
18 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0), (1.0, -1.0)) -0.04051363468170166
19 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.04930921271443367
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
20 ((1.0, -1.0), (-1.0, 1.0), (1.0, 1.0)) -0.04115105792880058
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
21 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0), (1.0, 1.0)) -0.02472892962396145
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
22 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) 0.0004460358468350023
23 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0), (1.0, 1.0), (1.0, 1.0)) -0.028145242482423782
24 ((1.0, -1.0), (1.0, -1.0), (-1.0, -1.0), (1.0, 1.0)) -0.021553030237555504
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
25 ((1.0, -1.0), (1.0, -1.0), (-1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) 7.303361780941486e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
26 ((1.0, -1.0), (1.0, -1.0), (-1.0, -1.0), (1.0, 1.0), (-1.0, 1.0)) -0.03718901053071022
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
27 ((1.0, -1.0), (1.0, -1.0), (-1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04207860678434372
28 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.0513637401163578
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
29 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.061548348516225815
Contact sequence search time: 81.56647609999345
['index', 'index']
4 index
Sampling time 3.466795713000465
Solve time for step 19.004536628723145
Solve time for step 4.774940729141235
Solve time for step 4.642363548278809
Solve time for step 4.629182577133179
Solve time for step 4.777172803878784
Solve time for step 4.545108795166016
Solve time for step 4.039250612258911
Solve time for step 3.946715831756592
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0),) -0.015577835962176323
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, 1.0),) -0.0054183416068553925
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0),) -0.017324227839708328
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (-1.0, -1.0)) 0.0002603324537631124
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((-1.0, -1.0),) 0.0008947112946771085
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, 1.0), (1.0, -1.0)) -0.022301264107227325
Contact sequence search time: 23.12167165700521
['index_middle', 'index']
0 index_middle
Sampling time 3.6806862149969675
Solve time for step 17.320778846740723
Solve time for step 3.9078361988067627
Solve time for step 4.27513575553894
Solve time for step 4.2573418617248535
Solve time for step 4.0778584480285645
Solve time for step 3.857591152191162
Solve time for step 3.953536033630371
Solve time for step 3.945405960083008
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0089, device='cuda:1')
Adjusting goal to tensor(-0.0289, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.008947549387812614
2 ((1.0, 1.0),) -0.008947549387812614
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (-1.0, -1.0)) -6.275908526731655e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, 1.0), (1.0, 1.0)) -0.016474232077598572
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, 1.0), (-1.0, 1.0)) -0.03378947079181671
Contact sequence search time: 11.919068664006772
['middle']
1 middle
Sampling time 3.518310925006517
Solve time for step 18.901482343673706
Solve time for step 4.677066802978516
Solve time for step 4.8705596923828125
Solve time for step 4.302701473236084
Solve time for step 4.331908226013184
Solve time for step 4.154495477676392
Solve time for step 4.166074514389038
Solve time for step 4.33560585975647
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0237, device='cuda:1')
Adjusting goal to tensor(-0.0437, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.023693032562732697
2 ((-1.0, 1.0),) -0.023693032562732697
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (-1.0, -1.0)) 0.0005982166039757431
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (-1.0, 1.0)) -0.04354623332619667
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((-1.0, 1.0), (1.0, -1.0)) -0.03209120035171509
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.043578047305345535
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 0.00022108963457867503
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.053281620144844055
Contact sequence search time: 23.67136897200544
['index', 'index', 'index']
2 index
Sampling time 3.48556670799735
Solve time for step 19.23763155937195
Solve time for step 4.352252244949341
Solve time for step 4.297868490219116
Solve time for step 4.290273904800415
Solve time for step 4.372495412826538
Solve time for step 4.277172327041626
Solve time for step 4.355860233306885
Solve time for step 4.22310471534729
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0371, device='cuda:1')
Adjusting goal to tensor(-0.0571, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.037074457854032516
2 ((1.0, -1.0),) -0.037074457854032516
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, -1.0)) 0.0005045353900641203
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (1.0, 1.0)) -0.03170249983668327
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, -1.0)) -0.04401914402842522
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0004129433073103428
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (-1.0, 1.0)) -0.05264189466834068
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) 0.0004584175767377019
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.05343024805188179
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((1.0, -1.0), (1.0, -1.0), (1.0, 1.0)) -0.04400113224983215
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
11 ((1.0, -1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0)) -0.0515281967818737
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
12 ((1.0, -1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0)) -0.057370468974113464
Contact sequence search time: 39.30166665800789
['index', 'index_middle', 'middle']
3 index
Sampling time 3.5552927590033505
Solve time for step 19.179872512817383
Solve time for step 4.530386686325073
Solve time for step 4.389115333557129
Solve time for step 4.308821201324463
Solve time for step 4.424722909927368
Solve time for step 4.152411699295044
Solve time for step 4.1200172901153564
Solve time for step 4.069013357162476
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0474, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((1.0, -1.0),) -0.04737356677651405
2 ((1.0, -1.0),) -0.04737356677651405
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, -1.0)) -5.246837827144191e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0)) -0.05379733070731163
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.00038788228994235396
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (1.0, 1.0)) -0.0385611355304718
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0)) -0.05112011730670929
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.00030902441358193755
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.0493122898042202
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05975911021232605
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
11 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, 1.0)) -0.04761011153459549
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
12 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, 1.0), (1.0, 1.0)) -0.047972578555345535
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
13 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (1.0, 1.0)) -0.05191797390580177
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
14 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (1.0, 1.0), (1.0, 1.0)) -0.05533274635672569
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
15 ((1.0, -1.0), (-1.0, 1.0), (1.0, 1.0)) -0.04560847952961922
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
16 ((1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) -1.2129545211791992e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
17 ((1.0, -1.0), (1.0, 1.0), (1.0, 1.0)) -0.03954179584980011
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
18 ((1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, 1.0)) -0.0387791246175766
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
19 ((1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, 1.0)) -0.049529630690813065
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
20 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0006196940084919333
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
21 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05260553956031799
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
22 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.050664208829402924
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
23 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, -1.0)) 0.0004361538158264011
24 ((1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (1.0, -1.0)) -0.047859009355306625
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
25 ((1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.000538308871909976
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
26 ((1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, -1.0)) 0.0002488975878804922
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
27 ((1.0, -1.0), (1.0, -1.0)) -0.04919210448861122
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
28 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.053139060735702515
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
29 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0001574040506966412
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
30 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.058621641248464584
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
31 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) -0.00036012736381962895
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
32 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05145386978983879
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
33 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.00020465294073801488
34 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.06077425926923752
Contact sequence search time: 117.33999884700461
['index', 'index', 'index', 'index']
4 index
Sampling time 3.611333887994988
Solve time for step 18.84306788444519
Solve time for step 4.252760410308838
Solve time for step 4.3206467628479
Solve time for step 4.336062908172607
Solve time for step 4.330158948898315
Solve time for step 4.228876829147339
Solve time for step 4.465613126754761
Solve time for step 4.253333568572998
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0),) -0.015790458768606186
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0),) -0.017127398401498795
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((-1.0, -1.0),) 0.0018177819438278675
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, 1.0),) -0.004497678019106388
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, 1.0), (-1.0, 1.0)) -0.020476119592785835
Contact sequence search time: 19.940893922001123
['index_middle', 'middle']
0 index_middle
Sampling time 3.4215815019997535
Solve time for step 16.930122137069702
Solve time for step 3.9916579723358154
Solve time for step 3.8956351280212402
Solve time for step 3.914649486541748
Solve time for step 4.184502124786377
Solve time for step 3.954441547393799
Solve time for step 3.873953104019165
Solve time for step 3.840696096420288
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0105, device='cuda:1')
Adjusting goal to tensor(-0.0305, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.010484983213245869
2 ((1.0, 1.0),) -0.010484983213245869
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (-1.0, 1.0)) -0.0335950143635273
Contact sequence search time: 4.033975845013629
['middle']
1 middle
Sampling time 3.5483108469925355
Solve time for step 18.980613708496094
Solve time for step 4.254837512969971
Solve time for step 4.280113220214844
Solve time for step 4.208608627319336
Solve time for step 4.3847527503967285
Solve time for step 4.219902276992798
Solve time for step 4.202088117599487
Solve time for step 4.237470865249634
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0157, device='cuda:1')
Adjusting goal to tensor(-0.0357, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.015680234879255295
2 ((-1.0, 1.0),) -0.015680234879255295
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (1.0, -1.0)) -0.03249445557594299
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.0430225133895874
Contact sequence search time: 7.717123940994497
['index', 'middle']
2 index
Sampling time 3.6797707160003483
Solve time for step 19.088903188705444
Solve time for step 4.35813045501709
Solve time for step 4.137678861618042
Solve time for step 4.24342679977417
Solve time for step 4.212686538696289
Solve time for step 4.230043411254883
Solve time for step 4.209259271621704
Solve time for step 4.216749429702759
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0323, device='cuda:1')
Adjusting goal to tensor(-0.0523, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.0322624109685421
2 ((1.0, -1.0),) -0.0322624109685421
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (1.0, -1.0)) -0.048301637172698975
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0)) -0.044651832431554794
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.05530637130141258
Contact sequence search time: 11.822353091003606
['index', 'index']
3 index
Sampling time 3.6031073439953616
Solve time for step 19.003804922103882
Solve time for step 4.367141246795654
Solve time for step 4.389232397079468
Solve time for step 4.433070182800293
Solve time for step 4.144686222076416
Solve time for step 4.312489986419678
Solve time for step 4.354196548461914
Solve time for step 4.294806957244873
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0500, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((1.0, -1.0),) -0.049951013177633286
2 ((1.0, -1.0),) -0.049951013177633286
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, 1.0)) -0.0512249730527401
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (1.0, 1.0)) -0.04629318416118622
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, 1.0), (1.0, -1.0)) -0.057161424309015274
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0)) -0.05046294629573822
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.05214451625943184
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05338895693421364
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (1.0, -1.0)) -0.0630292221903801
Contact sequence search time: 27.390782141999807
['index']
4 index
Sampling time 3.617470199998934
Solve time for step 19.061203479766846
Solve time for step 4.3298845291137695
Solve time for step 4.360116243362427
Solve time for step 4.295631170272827
Solve time for step 4.265321731567383
Solve time for step 4.433079719543457
Solve time for step 4.191793918609619
Solve time for step 4.184058666229248
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0),) -0.014964587055146694
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, -1.0),) 0.0013430726248770952
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0),) -0.017495334148406982
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (-1.0, -1.0)) 0.00021342109539546072
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (-1.0, -1.0), (1.0, -1.0)) -0.02117021754384041
Contact sequence search time: 19.97548095000093
['index', 'reposition', 'index']
0 index
Sampling time 3.4324046880065
Solve time for step 18.591370105743408
Solve time for step 4.761979579925537
Solve time for step 4.780202388763428
Solve time for step 4.480275869369507
Solve time for step 4.2606587409973145
Solve time for step 4.407015562057495
Solve time for step 4.2263264656066895
Solve time for step 4.068803787231445
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0097, device='cuda:1')
Adjusting goal to tensor(-0.0297, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.009710551239550114
2 ((1.0, -1.0),) -0.009710551239550114
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, -1.0)) 4.023900692118332e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0)) -0.015515994280576706
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, 1.0)) -0.014532296918332577
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (1.0, -1.0)) -0.031149353832006454
Contact sequence search time: 16.029981108003994
['index']
1 index
Sampling time 3.474179564989754
Solve time for step 18.72382116317749
Solve time for step 4.58799934387207
Solve time for step 4.305750131607056
Solve time for step 4.664617538452148
Solve time for step 4.436498641967773
Solve time for step 4.385737419128418
Solve time for step 4.274217844009399
Solve time for step 4.180631637573242
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0173, device='cuda:1')
Adjusting goal to tensor(-0.0373, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.017323292791843414
2 ((1.0, -1.0),) -0.017323292791843414
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (1.0, 1.0)) -0.023282498121261597
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0)) -0.01902376301586628
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, -1.0)) -0.03473976254463196
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.03651034086942673
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (-1.0, -1.0)) 0.0002506867458578199
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.03181799128651619
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) -8.064345456659794e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((1.0, -1.0), (1.0, 1.0), (1.0, -1.0)) -0.04064955562353134
Contact sequence search time: 31.29627235699445
['index_middle', 'index']
2 index_middle
Sampling time 3.511838966005598
Solve time for step 17.515271186828613
Solve time for step 4.506539344787598
Solve time for step 4.238522529602051
Solve time for step 4.471277713775635
Solve time for step 4.35568380355835
Solve time for step 3.876861810684204
Solve time for step 3.784604787826538
Solve time for step 3.7322018146514893
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0214, device='cuda:1')
Adjusting goal to tensor(-0.0414, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.021436750888824463
2 ((1.0, 1.0),) -0.021436750888824463
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (-1.0, -1.0)) 0.00027120564482174814
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, 1.0), (-1.0, 1.0)) -0.0440903902053833
Contact sequence search time: 7.890851842996199
['middle']
3 middle
Sampling time 3.483653969000443
Solve time for step 18.810996294021606
Solve time for step 4.585941553115845
Solve time for step 4.361719608306885
Solve time for step 4.415554761886597
Solve time for step 4.347226619720459
Solve time for step 4.28003716468811
Solve time for step 4.221104621887207
Solve time for step 4.138444662094116
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0363, device='cuda:1')
Adjusting goal to tensor(-0.0563, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.03633914887905121
2 ((-1.0, 1.0),) -0.03633914887905121
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (1.0, -1.0)) -0.04121391847729683
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.060324396938085556
Contact sequence search time: 7.698073715000646
['index', 'middle']
4 index
Sampling time 3.691593056995771
Solve time for step 19.044989109039307
Solve time for step 4.3743133544921875
Solve time for step 4.407095670700073
Solve time for step 4.253097057342529
Solve time for step 4.2546610832214355
Solve time for step 4.189948081970215
Solve time for step 4.276905059814453
Solve time for step 4.020509481430054
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0),) -0.005223831627517939
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0),) -0.015324383042752743
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0),) -0.016582094132900238
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, 1.0), (-1.0, -1.0)) 0.0005738238105550408
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((-1.0, -1.0),) 0.0015132342232391238
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (-1.0, 1.0)) -0.017803847789764404
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, 1.0), (-1.0, 1.0)) -0.02095128782093525
Contact sequence search time: 27.224983460997464
['index_middle', 'middle']
0 index_middle
Sampling time 3.377290718999575
Solve time for step 17.4617919921875
Solve time for step 4.113865613937378
Solve time for step 4.174431085586548
Solve time for step 3.9995615482330322
Solve time for step 3.7691030502319336
Solve time for step 3.650599718093872
Solve time for step 3.938304901123047
Solve time for step 3.563549757003784
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0098, device='cuda:1')
Adjusting goal to tensor(-0.0298, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.009779002517461777
2 ((1.0, 1.0),) -0.009779002517461777
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (-1.0, 1.0)) -0.03394916281104088
Contact sequence search time: 4.04252778000955
['middle']
1 middle
Sampling time 3.639540764997946
Solve time for step 19.168859481811523
Solve time for step 4.498287916183472
Solve time for step 4.337933778762817
Solve time for step 4.520865440368652
Solve time for step 4.371265888214111
Solve time for step 4.641104459762573
Solve time for step 4.162816047668457
Solve time for step 4.150912284851074
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0260, device='cuda:1')
Adjusting goal to tensor(-0.0460, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.02602190151810646
2 ((-1.0, 1.0),) -0.02602190151810646
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (-1.0, -1.0)) 0.0007694739033468068
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (-1.0, 1.0)) -0.04391523823142052
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((-1.0, 1.0), (1.0, -1.0)) -0.03079531341791153
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0)) -0.035509075969457626
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0)) -0.04463427513837814
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.04266924038529396
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05202126130461693
Contact sequence search time: 27.6555018099898
['index', 'index_middle', 'index', 'index']
2 index
Sampling time 3.5706576889933785
Solve time for step 19.72428035736084
Solve time for step 4.906483173370361
Solve time for step 4.316699028015137
Solve time for step 4.260442018508911
Solve time for step 4.190513610839844
Solve time for step 4.266810655593872
Solve time for step 4.271274089813232
Solve time for step 4.202934265136719
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0385, device='cuda:1')
Adjusting goal to tensor(-0.0585, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.038495875895023346
2 ((1.0, -1.0),) -0.038495875895023346
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, 1.0)) -0.050152018666267395
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0007294308743439615
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, 1.0)) -0.029892273247241974
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (-1.0, -1.0)) 0.0004429244145285338
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (1.0, -1.0)) -0.04323151335120201
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 0.00030143227195367217
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0)) -0.046114593744277954
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0005113465012982488
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
11 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04571709781885147
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
12 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05418337509036064
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
13 ((1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) 0.0002448507002554834
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
14 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.04898723587393761
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
15 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.05182856321334839
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
16 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.054183412343263626
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
17 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.00015604833606630564
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
18 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0003024651377927512
19 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.052080173045396805
20 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05552120506763458
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
21 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05776224657893181
22 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05299622192978859
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
23 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05389733612537384
24 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.046585746109485626
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
25 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05182202160358429
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
26 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05245993658900261
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
27 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05809732526540756
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
28 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0)) -0.04622370004653931
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
29 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, 1.0), (-1.0, 1.0)) -0.05886753275990486
Contact sequence search time: 90.19495024999196
['middle', 'index', 'middle', 'index_middle', 'middle']
3 middle
Sampling time 3.5452925540012075
Solve time for step 19.000925540924072
Solve time for step 4.4809205532073975
Solve time for step 4.410230398178101
Solve time for step 4.377440690994263
Solve time for step 4.71146559715271
Solve time for step 4.615567684173584
Solve time for step 4.345327615737915
Solve time for step 4.614237070083618
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0544, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((-1.0, 1.0),) -0.054404061287641525
2 ((-1.0, 1.0),) -0.054404061287641525
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (-1.0, 1.0)) -0.06376171112060547
Contact sequence search time: 4.1669030920020305
['middle']
4 middle
Sampling time 3.7158236160030356
Solve time for step 18.957791090011597
Solve time for step 4.317760705947876
Solve time for step 4.5781543254852295
Solve time for step 4.324604034423828
Solve time for step 4.2816383838653564
Solve time for step 4.372940540313721
Solve time for step 4.0358686447143555
Solve time for step 4.405117988586426
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0),) -0.004468217957764864
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0),) -0.014646518975496292
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0),) -0.01786578819155693
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, -1.0),) 0.001834499416872859
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, 1.0), (-1.0, -1.0)) 0.00047955141053535044
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, 1.0), (-1.0, 1.0)) -0.02082933858036995
Contact sequence search time: 23.465065091004362
['index_middle', 'middle']
0 index_middle
Sampling time 3.5801745730132097
Solve time for step 17.771886110305786
Solve time for step 4.070824861526489
Solve time for step 4.235324382781982
Solve time for step 4.09566330909729
Solve time for step 4.00465989112854
Solve time for step 3.8392505645751953
Solve time for step 3.9125144481658936
Solve time for step 3.8886704444885254
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0091, device='cuda:1')
Adjusting goal to tensor(-0.0291, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.009081967175006866
2 ((1.0, 1.0),) -0.009081967175006866
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (-1.0, -1.0)) 0.00017594073142390698
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, 1.0), (-1.0, 1.0)) -0.031241685152053833
Contact sequence search time: 7.883044931993936
['middle']
1 middle
Sampling time 3.671644980000565
Solve time for step 18.46924090385437
Solve time for step 4.336583137512207
Solve time for step 4.500721454620361
Solve time for step 4.415096282958984
Solve time for step 4.345765590667725
Solve time for step 4.389641284942627
Solve time for step 4.246931791305542
Solve time for step 4.382892847061157
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0218, device='cuda:1')
Adjusting goal to tensor(-0.0418, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.021806368604302406
2 ((-1.0, 1.0),) -0.021806368604302406
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (-1.0, -1.0)) 0.00021909576025791466
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (-1.0, 1.0)) -0.041679978370666504
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((-1.0, 1.0), (1.0, -1.0)) -0.032184384763240814
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.04698785021901131
Contact sequence search time: 16.09911819199624
['index', 'index']
2 index
Sampling time 3.559492008003872
Solve time for step 18.874432802200317
Solve time for step 4.68826150894165
Solve time for step 4.513679265975952
Solve time for step 4.512802362442017
Solve time for step 4.483963251113892
Solve time for step 4.406121730804443
Solve time for step 4.590940237045288
Solve time for step 4.373864650726318
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0359, device='cuda:1')
Adjusting goal to tensor(-0.0559, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.03592538461089134
2 ((1.0, -1.0),) -0.03592538461089134
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, -1.0)) 0.0004328301001805812
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (1.0, -1.0)) -0.04835469648241997
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.05196108669042587
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (-1.0, 1.0)) -0.05242742598056793
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05182596296072006
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (1.0, 1.0)) -0.03760450333356857
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) 0.00046213058521971107
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05517901852726936
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
11 ((1.0, -1.0), (1.0, 1.0), (1.0, 1.0)) -0.0416625514626503
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
12 ((1.0, -1.0), (1.0, 1.0), (1.0, 1.0), (-1.0, -1.0)) 0.0005876083159819245
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
13 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0003533358103595674
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
14 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05741347000002861
Contact sequence search time: 47.615527253001346
['index', 'index', 'middle', 'middle']
3 index
Sampling time 3.5819073320017196
Solve time for step 19.066238164901733
Solve time for step 4.263416051864624
Solve time for step 4.3442840576171875
Solve time for step 4.228817939758301
Solve time for step 4.066479682922363
Solve time for step 4.113467693328857
Solve time for step 4.2483460903167725
Solve time for step 4.358194589614868
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0478, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((1.0, -1.0),) -0.047811008989810944
2 ((1.0, -1.0),) -0.047811008989810944
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, 1.0)) -0.053731270134449005
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.00042834796477109194
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, -1.0)) -0.053007278591394424
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.054031454026699066
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (1.0, 1.0)) -0.04992000013589859
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04899078235030174
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0)) -0.05140805244445801
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) 0.0002784783428069204
11 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0)) -0.05062795430421829
12 ((1.0, -1.0), (1.0, 1.0), (1.0, -1.0)) -0.052327390760183334
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
13 ((1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.0547664538025856
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
14 ((1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.049709029495716095
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
15 ((1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.052868254482746124
16 ((1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0003734493802767247
17 ((1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05292288213968277
18 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.060758255422115326
Contact sequence search time: 43.52468537200184
['middle', 'middle']
4 middle
Sampling time 3.434087064000778
Solve time for step 18.741479873657227
Solve time for step 4.670724153518677
Solve time for step 4.702587842941284
Solve time for step 4.547534465789795
Solve time for step 4.653724193572998
Solve time for step 4.535944223403931
Solve time for step 4.297666311264038
Solve time for step 4.7940778732299805
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0),) -0.015403359197080135
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0),) -0.01524685975164175
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, 1.0),) -0.004672045819461346
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, -1.0),) 0.0011879574740305543
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (-1.0, -1.0)) 0.00022692428319714963
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, 1.0), (1.0, -1.0)) -0.02086428366601467
Contact sequence search time: 23.22129712399328
['index_middle', 'index']
0 index_middle
Sampling time 3.432905836001737
Solve time for step 17.93314242362976
Solve time for step 4.032378196716309
Solve time for step 4.069019556045532
Solve time for step 3.9572958946228027
Solve time for step 3.970994710922241
Solve time for step 3.9517531394958496
Solve time for step 3.9940264225006104
Solve time for step 3.712372303009033
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0093, device='cuda:1')
Adjusting goal to tensor(-0.0293, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.009279134683310986
2 ((1.0, 1.0),) -0.009279134683310986
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (-1.0, -1.0)) -0.00011324607476126403
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, 1.0), (-1.0, 1.0)) -0.031466294080019
Contact sequence search time: 7.725883558989153
['middle']
1 middle
Sampling time 3.48949743299454
Solve time for step 18.60969376564026
Solve time for step 4.39839768409729
Solve time for step 4.5027995109558105
Solve time for step 4.66812801361084
Solve time for step 4.151643753051758
Solve time for step 4.587453603744507
Solve time for step 4.539553165435791
Solve time for step 4.271670818328857
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0201, device='cuda:1')
Adjusting goal to tensor(-0.0401, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.02006896212697029
2 ((-1.0, 1.0),) -0.02006896212697029
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (-1.0, 1.0)) -0.043274618685245514
Contact sequence search time: 3.8281016340042697
['middle']
2 middle
Sampling time 3.6934985209954903
Solve time for step 19.225125312805176
Solve time for step 4.664652347564697
Solve time for step 4.5611841678619385
Solve time for step 4.429999113082886
Solve time for step 4.577785968780518
Solve time for step 4.366818189620972
Solve time for step 4.443426847457886
Solve time for step 4.122209787368774
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0339, device='cuda:1')
Adjusting goal to tensor(-0.0539, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.03390985354781151
2 ((-1.0, 1.0),) -0.03390985354781151
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (1.0, -1.0)) -0.03715096786618233
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05274775251746178
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.00040994619484990835
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.04818044975399971
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((-1.0, 1.0), (-1.0, -1.0)) 0.0005698293098248541
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0004958115168847144
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04931921139359474
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.055966123938560486
Contact sequence search time: 31.775407499007997
['index', 'middle', 'index', 'index']
3 index
Sampling time 3.6777192940062378
Solve time for step 19.03931713104248
Solve time for step 4.825031518936157
Solve time for step 4.485782861709595
Solve time for step 4.764748811721802
Solve time for step 4.2702977657318115
Solve time for step 4.333759784698486
Solve time for step 4.329212665557861
Solve time for step 4.296675682067871
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0463, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((1.0, -1.0),) -0.046266671270132065
2 ((1.0, -1.0),) -0.046266671270132065
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, -1.0)) 0.0006248948629945517
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0)) -0.05620739236474037
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04927961155772209
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.06266093254089355
Contact sequence search time: 15.826284633003525
['middle', 'middle']
4 middle
Sampling time 3.490297037002165
Solve time for step 18.909034490585327
Solve time for step 4.472738742828369
Solve time for step 4.194694519042969
Solve time for step 5.100404262542725
Solve time for step 4.2529237270355225
Solve time for step 4.090859889984131
Solve time for step 4.160663843154907
Solve time for step 4.307132720947266
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, -1.0),) 0.0010490429122000933
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0),) -0.01616012118756771
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, 1.0),) -0.00538330664858222
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, 1.0),) -0.014531739056110382
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (-1.0, -1.0)) 0.00022301837452687323
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, 1.0), (-1.0, -1.0)) 0.0007193458150140941
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, 1.0), (-1.0, 1.0)) -0.021054977551102638
Contact sequence search time: 27.458414912005537
['index_middle', 'middle']
0 index_middle
Sampling time 3.564890068999375
Solve time for step 18.360857725143433
Solve time for step 3.962402582168579
Solve time for step 4.146543741226196
Solve time for step 4.051788568496704
Solve time for step 3.970226764678955
Solve time for step 4.055557012557983
Solve time for step 4.2625205516815186
Solve time for step 3.7708852291107178
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0114, device='cuda:1')
Adjusting goal to tensor(-0.0314, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.01140725426375866
2 ((1.0, 1.0),) -0.01140725426375866
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (-1.0, 1.0)) -0.03464759886264801
Contact sequence search time: 4.0011380549985915
['middle']
1 middle
Sampling time 3.531757087999722
Solve time for step 18.841864824295044
Solve time for step 4.255605459213257
Solve time for step 4.293905973434448
Solve time for step 4.265279531478882
Solve time for step 4.260528087615967
Solve time for step 4.233709335327148
Solve time for step 4.076384782791138
Solve time for step 4.141473054885864
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0274, device='cuda:1')
Adjusting goal to tensor(-0.0474, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.02741946652531624
2 ((-1.0, 1.0),) -0.02741946652531624
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (-1.0, -1.0)) 0.0007220947882160544
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (1.0, -1.0)) -0.0341181755065918
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.04483111947774887
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 0.00029210210777819157
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.053771164268255234
Contact sequence search time: 20.16708517400548
['index', 'index', 'index']
2 index
Sampling time 3.7615301740006544
Solve time for step 19.209984064102173
Solve time for step 4.807739734649658
Solve time for step 4.665876865386963
Solve time for step 4.345599412918091
Solve time for step 4.031870603561401
Solve time for step 4.347894191741943
Solve time for step 4.247081279754639
Solve time for step 4.116946220397949
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0409, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((1.0, -1.0),) -0.04085540771484375
2 ((1.0, -1.0),) -0.04085540771484375
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, 1.0)) -0.05752701684832573
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, -1.0)) 0.00028721013222821057
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, 1.0)) -0.040926702320575714
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (1.0, -1.0)) -0.043301910161972046
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0004920489736832678
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (1.0, -1.0), (-1.0, 1.0)) -0.052636776119470596
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0006059697479940951
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.062431707978248596
Contact sequence search time: 31.899537019999116
['middle', 'middle']
3 middle
Sampling time 3.5810465480026323
Solve time for step 19.268965482711792
Solve time for step 4.395238876342773
Solve time for step 4.262758016586304
Solve time for step 4.2145020961761475
Solve time for step 4.439165830612183
Solve time for step 4.195842504501343
Solve time for step 4.191563606262207
Solve time for step 4.382774353027344
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0581, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((-1.0, 1.0),) -0.05807828530669212
2 ((-1.0, 1.0),) -0.05807828530669212
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (-1.0, 1.0)) -0.06268532574176788
Contact sequence search time: 4.18881712500297
['middle']
4 middle
Sampling time 3.5910016559937503
Solve time for step 19.138731956481934
Solve time for step 4.624834775924683
Solve time for step 4.6163649559021
Solve time for step 4.765948057174683
Solve time for step 4.095074415206909
Solve time for step 4.047375917434692
Solve time for step 4.006091594696045
Solve time for step 4.066464185714722
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
[ models/temporal ] Channel dimensions: [(29, 128), (128, 256), (256, 512)]
Loaded trajectory sampler
Current y: tensor(0.0003, device='cuda:1')
Adjusting goal to tensor(-0.0197, device='cuda:1')
params num_samples 16
1 () 0.0002522412978578359
2 () 0.0002522412978578359
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0),) -0.014862037263810635
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, -1.0),) 0.0015606532106176019
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0),) -0.015664750710129738
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, 1.0),) -0.00502776587381959
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, 1.0), (-1.0, -1.0)) 0.0004928467678837478
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, 1.0), (1.0, 1.0)) -0.00965320598334074
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, 1.0), (-1.0, 1.0)) -0.021965473890304565
Contact sequence search time: 26.734697324005538
['index_middle', 'middle']
0 index_middle
Sampling time 3.6223477409948828
Solve time for step 17.111681938171387
Solve time for step 4.010598659515381
Solve time for step 3.8539066314697266
Solve time for step 3.771451473236084
Solve time for step 3.7173807621002197
Solve time for step 3.7533514499664307
Solve time for step 3.773918390274048
Solve time for step 3.8159382343292236
traj index middle torch.Size([8, 28])
Current y: tensor(-0.0081, device='cuda:1')
Adjusting goal to tensor(-0.0281, device='cuda:1')
params num_samples 16
1 ((1.0, 1.0),) -0.008078771643340588
2 ((1.0, 1.0),) -0.008078771643340588
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, 1.0), (-1.0, -1.0)) 0.0003844890452455729
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, 1.0), (-1.0, 1.0)) -0.029550381004810333
Contact sequence search time: 7.916860721001285
['middle']
1 middle
Sampling time 3.660660759007442
Solve time for step 19.246504068374634
Solve time for step 4.270429849624634
Solve time for step 4.473846197128296
Solve time for step 4.113324403762817
Solve time for step 4.120349168777466
Solve time for step 4.069860935211182
Solve time for step 4.010579347610474
Solve time for step 4.05902624130249
traj pre middle torch.Size([8, 25])
traj post middle torch.Size([8, 28])
Current y: tensor(-0.0205, device='cuda:1')
Adjusting goal to tensor(-0.0405, device='cuda:1')
params num_samples 16
1 ((-1.0, 1.0),) -0.020497167482972145
2 ((-1.0, 1.0),) -0.020497167482972145
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((-1.0, 1.0), (-1.0, -1.0)) 0.00045593021786771715
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((-1.0, 1.0), (-1.0, 1.0)) -0.0386381670832634
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((-1.0, 1.0), (1.0, -1.0)) -0.031883299350738525
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.04661785438656807
Contact sequence search time: 15.557864696995239
['index', 'index']
2 index
Sampling time 3.417521633004071
Solve time for step 19.18356728553772
Solve time for step 4.292095899581909
Solve time for step 4.602755546569824
Solve time for step 4.31482458114624
Solve time for step 4.081971883773804
Solve time for step 4.062353849411011
Solve time for step 3.9966561794281006
Solve time for step 3.9620718955993652
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0350, device='cuda:1')
Adjusting goal to tensor(-0.0550, device='cuda:1')
params num_samples 16
1 ((1.0, -1.0),) -0.035016871988773346
2 ((1.0, -1.0),) -0.035016871988773346
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (1.0, -1.0)) -0.04612945765256882
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0)) -0.041539520025253296
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (1.0, -1.0), (1.0, 1.0)) -0.05079137906432152
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (1.0, -1.0), (1.0, -1.0)) -0.05595758929848671
Contact sequence search time: 15.305131802990218
['index', 'index']
3 index
Sampling time 3.4282103040022776
Solve time for step 17.91837239265442
Solve time for step 4.21343731880188
Solve time for step 4.266235828399658
Solve time for step 4.261295318603516
Solve time for step 4.347823619842529
Solve time for step 4.137902021408081
Solve time for step 4.2711310386657715
Solve time for step 4.197021722793579
traj pre index torch.Size([8, 25])
traj post index torch.Size([8, 28])
Current y: tensor(-0.0468, device='cuda:1')
Adjusting goal to -0.06
params num_samples 16
1 ((1.0, -1.0),) -0.046783387660980225
2 ((1.0, -1.0),) -0.046783387660980225
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
3 ((1.0, -1.0), (-1.0, 1.0)) -0.04891633242368698
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
4 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0)) -0.05312823876738548
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
5 ((1.0, -1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.00024861597921699286
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
6 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0)) -0.05399705842137337
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
7 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, -1.0)) 0.00014993961667641997
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
8 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.05527067929506302
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
9 ((1.0, -1.0), (1.0, -1.0)) -0.05511835590004921
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
10 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0)) -0.053369585424661636
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
11 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) -1.5721365343779325e-05
12 ((1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.057850781828165054
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
13 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (1.0, -1.0), (1.0, -1.0)) -0.058638423681259155
14 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.05477864667773247
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
15 ((1.0, -1.0), (-1.0, 1.0), (1.0, 1.0)) -0.04624035209417343
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
16 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0)) -0.055401016026735306
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
17 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, 1.0)) -0.04862581565976143
18 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.05047322064638138
19 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.059351008385419846
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
20 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.0003385172749403864
21 ((1.0, -1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 5.35674043931067e-05
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
22 ((1.0, -1.0), (1.0, 1.0)) -0.041025955229997635
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
23 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0)) -0.05023932456970215
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
24 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, -1.0)) 0.000519781606271863
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
25 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0)) -0.04866300895810127
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
26 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, -1.0)) 0.0003605791716836393
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
27 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (1.0, -1.0), (-1.0, 1.0)) -0.055148426443338394
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
28 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.05800369381904602
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
       device='cuda:1')
29 ((1.0, -1.0), (1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0), (-1.0, 1.0)) -0.061759427189826965
Contact sequence search time: 83.57938150200062
['index_middle', 'middle', 'middle', 'middle']
4 index_middle
Sampling time 3.4275446819956414
Solve time for step 16.721083879470825
Solve time for step 3.9578237533569336
Solve time for step 4.480820417404175
Solve time for step 3.9920969009399414
Solve time for step 3.9571361541748047
Solve time for step 4.042309284210205
Solve time for step 3.6321821212768555
Solve time for step 4.134521245956421
traj index middle torch.Size([8, 28])
csvgd, Average time per step: 0.0
{}
