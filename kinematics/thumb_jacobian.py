import torch
from typing import Union, Tuple, List, Dict, Optional
from functools import lru_cache

def thumb_jacobian_impl(q: torch.Tensor, link_name: str) -> torch.Tensor:
    """
    Jacobian calculation for thumb finger.
    Takes joint angles and link name, returns 6xN Jacobian matrix.

    Args:
        q: Joint angles tensor of shape [batch_size, 4]
        link_name: Name of the link to compute Jacobian for

    Returns:
        Jacobian matrix of shape [batch_size, 6, 4]
    """
    batch_size = q.shape[0]
    device = q.device
    dtype = q.dtype

    # Initialize Jacobian matrix
    J = torch.zeros(batch_size, 6, 4, dtype=dtype, device=device)

    if link_name == 'allegro_hand_oya_finger_link_13':
        J[:, 0, 0] = -0.005*torch.sin(q[:, 0]) + 0.0399*torch.cos(q[:, 0]) - 1.30104260698261e-18
        J[:, 1, 0] = -0.0397481684538606*torch.sin(q[:, 0]) - 0.00498097349045873*torch.cos(q[:, 0]) + 1.43543937346365e-19
        J[:, 2, 0] = 0.00347751413563156*torch.sin(q[:, 0]) + 0.000435778713738291*torch.cos(q[:, 0]) - 1.25584672356824e-20
        J[:, 3, 0] = 5.33675006916149e-18
        J[:, 4, 0] = -0.0871557427476582
        J[:, 5, 0] = -0.996194698091746
    elif link_name == 'allegro_hand_oya_finger_link_14':
        J[:, 0, 0] = -0.005*torch.sin(q[:, 0]) + 0.0576*torch.cos(q[:, 0]) - 1.30104260698261e-18
        J[:, 0, 1] = -9.43245985943968e-21*torch.sin(2*q[:, 0]) - 2.16840434497101e-19*torch.cos(2*q[:, 0]) - 2.16840434497101e-19
        J[:, 1, 0] = -0.0573808146100845*torch.sin(q[:, 0]) - 0.00498097349045872*torch.cos(q[:, 0]) + 1.43543937346365e-19
        J[:, 1, 1] = 2.16840434497101e-19*torch.sin(2*q[:, 0]) - 9.25273454422448e-21*torch.cos(2*q[:, 0]) - 9.25273454422448e-21
        J[:, 2, 0] = 0.00502017078226511*torch.sin(q[:, 0]) + 0.000435778713738291*torch.cos(q[:, 0]) - 1.25584672356824e-20
        J[:, 2, 1] = 2.46609984444992e-21*torch.cos(2*q[:, 0]) - 2.13984579412554e-19
        J[:, 3, 0] = 5.33675006916149e-18
        J[:, 3, 1] = 1.0*torch.sin(q[:, 0]) - 6.0999332417281e-17*torch.cos(q[:, 0])
        J[:, 4, 0] = -0.0871557427476582
        J[:, 4, 1] = 6.12323399573677e-17*torch.sin(q[:, 0]) + 0.996194698091746*torch.cos(q[:, 0])
        J[:, 5, 0] = -0.996194698091746
        J[:, 5, 1] = -0.0871557427476582*torch.cos(q[:, 0])
    elif link_name == 'allegro_hand_oya_finger_link_15':
        J[:, 0, 0] = -0.0514*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) + 3.13536568624824e-18*torch.sin(q[:, 0])*torch.cos(q[:, 2]) - 0.005*torch.sin(q[:, 0]) + 3.13536568624824e-18*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 0.0514*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 0.0576*torch.cos(q[:, 0]) - 1.30104260698261e-18
        J[:, 0, 1] = 3.13536568624824e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) - 1.88649197188794e-20*torch.sin(q[:, 0])*torch.cos(q[:, 0]) + 2.74308953554901e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2]) + 0.0514*torch.sin(q[:, 2])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 4.33680868994202e-19*torch.cos(q[:, 0])**2
        J[:, 0, 2] = 0.0514*(((0.996194698091746*torch.sin(q[:, 0]) - 6.12323399573677e-17*torch.cos(q[:, 0]))*torch.sin(q[:, 1]) - 0.0871557427476582*torch.cos(q[:, 1]))*torch.sin(q[:, 2]) - (6.12323399573677e-17*torch.sin(q[:, 0]) + 0.996194698091746*torch.cos(q[:, 0]))*torch.cos(q[:, 2]))*(0.0871557427476582*torch.sin(q[:, 0])*torch.cos(q[:, 1]) - 0.996194698091746*torch.sin(q[:, 1])) - (0.0514*(0.0871557427476582*torch.sin(q[:, 0])*torch.sin(q[:, 1]) + 0.996194698091746*torch.cos(q[:, 1]))*torch.sin(q[:, 2]) - 0.00447980517722963*torch.cos(q[:, 0])*torch.cos(q[:, 2]))*(1.0*(0.996194698091746*torch.sin(q[:, 0]) - 6.12323399573677e-17*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) + 0.0871557427476582*torch.sin(q[:, 1]))
        J[:, 1, 0] = -3.1473422738087e-18*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 0.0512044074819157*torch.sin(q[:, 0])*torch.cos(q[:, 2]) - 0.0573808146100845*torch.sin(q[:, 0]) - 0.0512044074819157*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 3.1473422738087e-18*torch.cos(q[:, 0])*torch.cos(q[:, 2]) - 0.00498097349045872*torch.cos(q[:, 0]) + 1.43543937346365e-19
        J[:, 1, 1] = 4.81482486096809e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) - 0.0512044074819157*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) + 4.33680868994202e-19*torch.sin(q[:, 0])*torch.cos(q[:, 0]) - 0.00447980517722963*torch.sin(q[:, 1])*torch.sin(q[:, 2]) + 3.1473422738087e-18*torch.sin(q[:, 2])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 4.81482486096809e-35*torch.cos(q[:, 0])**2*torch.cos(q[:, 2]) - 1.8505469088449e-20*torch.cos(q[:, 0])**2
        J[:, 1, 2] = -4.81482486096809e-35*torch.sin(q[:, 0])**2*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) - 0.0512044074819157*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2]) - 3.1473422738087e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2]) + 4.81482486096809e-35*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2]) + 3.1473422738087e-18*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2]) - 0.0512044074819157*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 0.00447980517722963*torch.cos(q[:, 1])*torch.cos(q[:, 2])
        J[:, 2, 0] = 4.81482486096809e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) + 0.00447980517722963*torch.sin(q[:, 0])*torch.cos(q[:, 2]) + 0.00502017078226511*torch.sin(q[:, 0]) + 0.00447980517722963*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) - 4.81482486096809e-35*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 0.000435778713738291*torch.cos(q[:, 0]) - 1.25584672356824e-20
        J[:, 2, 1] = -4.93219968889979e-21*torch.sin(q[:, 0])**2 + 0.00447980517722963*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) - 0.0512044074819157*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 4.81482486096809e-35*torch.sin(q[:, 2])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 2.11518479568104e-19
        J[:, 2, 2] = 0.00447980517722963*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2]) + 0.00447980517722963*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 0.0512044074819157*torch.cos(q[:, 1])*torch.cos(q[:, 2])
        J[:, 3, 0] = 5.33675006916149e-18
        J[:, 3, 1] = 1.0*torch.sin(q[:, 0]) - 6.0999332417281e-17*torch.cos(q[:, 0])
        J[:, 3, 2] = 1.0*(6.0999332417281e-17*torch.sin(q[:, 0]) + 1.0*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) + 5.33675006916149e-18*torch.sin(q[:, 1])
        J[:, 4, 0] = -0.0871557427476582
        J[:, 4, 1] = 6.12323399573677e-17*torch.sin(q[:, 0]) + 0.996194698091746*torch.cos(q[:, 0])
        J[:, 4, 2] = -1.0*(0.996194698091746*torch.sin(q[:, 0]) - 6.12323399573677e-17*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) - 0.0871557427476582*torch.sin(q[:, 1])
        J[:, 5, 0] = -0.996194698091746
        J[:, 5, 1] = -0.0871557427476582*torch.cos(q[:, 0])
        J[:, 5, 2] = 0.0871557427476582*torch.sin(q[:, 0])*torch.cos(q[:, 1]) - 0.996194698091746*torch.sin(q[:, 1])
    elif link_name == 'allegro_hand_oya_finger_3_aftc_base_link':
        J[:, 0, 0] = -0.0514*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 0.0315*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.013*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 7.92991321424653e-19*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) + 3.13536568624824e-18*torch.sin(q[:, 0])*torch.cos(q[:, 2]) + 1.92147897114435e-18*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.005*torch.sin(q[:, 0]) + 3.13536568624824e-18*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 1.92147897114435e-18*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 7.92991321424653e-19*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.013*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.0514*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 0.0315*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.0576*torch.cos(q[:, 0]) - 1.30104260698261e-18
        J[:, 0, 1] = 3.13536568624824e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) - 1.20370621524202e-35*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 1.92147897114435e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 1.88649197188794e-20*torch.sin(q[:, 0])*torch.cos(q[:, 0]) - 7.92991321424653e-19*torch.sin(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 2.74308953554901e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2]) + 1.68107627178587e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 2.40741243048404e-35*torch.sin(q[:, 1])*torch.cos(q[:, 0])**2*torch.cos(q[:, 2] + q[:, 3]) - 6.93777508990994e-20*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.0514*torch.sin(q[:, 2])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 0.0315*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 4.33680868994202e-19*torch.cos(q[:, 0])**2 - 0.013*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 0, 2] = -2.40741243048404e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 7.92991321424653e-19*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 1.20370621524202e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 3.13536568624824e-18*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2]) + 1.92147897114435e-18*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 0.0514*torch.sin(q[:, 0])*torch.sin(q[:, 2]) - 0.0315*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) - 4.33680868994202e-19*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.013*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 4.33680868994202e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1]) + 0.013*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.0514*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 0.0315*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 3.13536568624824e-18*torch.sin(q[:, 2])*torch.cos(q[:, 0]) - 2.40741243048404e-35*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1]) + 1.92147897114435e-18*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 6.93777508990994e-20*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 4.81482486096809e-35*torch.cos(q[:, 0])**2*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 7.92991321424653e-19*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 2.74308953554901e-19*torch.cos(q[:, 1])*torch.cos(q[:, 2]) - 1.68107627178587e-19*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 0, 3] = 7.92991321424653e-19*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 1.20370621524202e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 1.92147897114435e-18*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 2.16840434497101e-19*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 0.0315*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) + 0.013*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.013*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 2.16840434497101e-19*torch.sin(q[:, 1])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.0315*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 1.20370621524202e-35*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1]) + 1.92147897114435e-18*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 6.93777508990994e-20*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 1.92592994438724e-34*torch.cos(q[:, 0])*torch.cos(q[:, 1])**2*torch.cos(q[:, 2] + q[:, 3]) - 7.92991321424653e-19*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 1.68107627178587e-19*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 1, 0] = -3.1473422738087e-18*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 1.92881870865708e-18*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 7.9602041944578e-19*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 0.0129505310751927*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) - 0.0512044074819157*torch.sin(q[:, 0])*torch.cos(q[:, 2]) - 0.03138013298989*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.0573808146100845*torch.sin(q[:, 0]) - 0.0512044074819157*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) - 0.03138013298989*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.0129505310751927*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 7.9602041944578e-19*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 3.1473422738087e-18*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 1.92881870865708e-18*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.00498097349045872*torch.cos(q[:, 0]) + 1.43543937346365e-19
        J[:, 1, 1] = 4.81482486096809e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) - 1.20370621524202e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.0512044074819157*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) - 0.03138013298989*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 4.33680868994202e-19*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 4.33680868994202e-19*torch.sin(q[:, 0])*torch.cos(q[:, 0]) + 0.0129505310751927*torch.sin(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 0.00447980517722963*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 0.00274540589655123*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.00113302465571956*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 3.1473422738087e-18*torch.sin(q[:, 2])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 1.20370621524202e-35*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])**2 + 1.92881870865708e-18*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 4.81482486096809e-35*torch.cos(q[:, 0])**2*torch.cos(q[:, 2]) - 1.8505469088449e-20*torch.cos(q[:, 0])**2 - 7.9602041944578e-19*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 1, 2] = -4.81482486096809e-35*torch.sin(q[:, 0])**2*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) + 1.20370621524202e-35*torch.sin(q[:, 0])**2*torch.sin(q[:, 1])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 1.92592994438724e-34*torch.sin(q[:, 0])*torch.sin(q[:, 1])**2*torch.cos(q[:, 2] + q[:, 3]) + 4.33680868994202e-19*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 0.0129505310751927*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 0.0512044074819157*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2]) - 0.03138013298989*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 3.1473422738087e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2]) + 1.20370621524202e-35*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 1.92881870865708e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) + 4.81482486096809e-35*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2]) + 7.9602041944578e-19*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 9.62964972193618e-35*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) + 7.9602041944578e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 3.1473422738087e-18*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 1.92881870865708e-18*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.0512044074819157*torch.sin(q[:, 2])*torch.cos(q[:, 0]) - 0.03138013298989*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.00113302465571956*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 0.0129505310751927*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.00447980517722963*torch.cos(q[:, 1])*torch.cos(q[:, 2]) + 0.00274540589655123*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 1, 3] = -2.40741243048404e-35*torch.sin(q[:, 0])**2*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 1.92592994438724e-34*torch.sin(q[:, 0])*torch.sin(q[:, 1])**2*torch.cos(q[:, 2] + q[:, 3]) - 0.0129505310751927*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 0.03138013298989*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 1.92881870865708e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) + 2.40741243048404e-35*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 7.9602041944578e-19*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 7.9602041944578e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 7.22223729145213e-35*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 1.92881870865708e-18*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 1.20370621524202e-35*torch.sin(q[:, 1])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 0.03138013298989*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.00113302465571956*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 0.0129505310751927*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.00274540589655123*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 2, 0] = 4.81482486096809e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) + 2.40741243048404e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 1.20370621524202e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.00113302465571956*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) + 0.00447980517722963*torch.sin(q[:, 0])*torch.cos(q[:, 2]) + 0.00274540589655123*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.00502017078226511*torch.sin(q[:, 0]) + 0.00447980517722963*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 0.00274540589655123*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 0.00113302465571956*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 1.20370621524202e-35*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 4.81482486096809e-35*torch.cos(q[:, 0])*torch.cos(q[:, 2]) - 2.40741243048404e-35*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.000435778713738291*torch.cos(q[:, 0]) + 7.52316384526264e-37*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 1.25584672356824e-20
        J[:, 2, 1] = -4.93219968889979e-21*torch.sin(q[:, 0])**2 + 0.00447980517722963*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) + 0.00274540589655123*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 0.00113302465571956*torch.sin(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 0.0512044074819157*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 0.03138013298989*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.0129505310751927*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 4.81482486096809e-35*torch.sin(q[:, 2])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 2.40741243048404e-35*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 1.20370621524202e-35*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 2.11518479568104e-19
        J[:, 2, 2] = 0.00113302465571956*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.00447980517722963*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2]) + 0.00274540589655123*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 4.81482486096809e-35*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1])**2 + 1.92592994438724e-34*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 1.20370621524202e-35*torch.sin(q[:, 0])*torch.cos(q[:, 1])**2*torch.cos(q[:, 2] + q[:, 3]) - 9.02779661431517e-36*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) - 3.00926553810506e-36*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 9.62964972193618e-35*torch.sin(q[:, 1])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 9.55441808348355e-35*torch.sin(q[:, 1])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.00447980517722963*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 0.00274540589655123*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.0129505310751927*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 0.00113302465571956*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.0512044074819157*torch.cos(q[:, 1])*torch.cos(q[:, 2]) + 0.03138013298989*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 2, 3] = 0.00113302465571956*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 1.73472347597681e-18*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.00274540589655123*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 1.92592994438724e-34*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 4.81482486096809e-35*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1])**2 + 1.20370621524202e-35*torch.sin(q[:, 0])*torch.cos(q[:, 1])**2*torch.cos(q[:, 2] + q[:, 3]) - 2.40741243048404e-35*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 2.40741243048404e-35*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 6.01853107621011e-36*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 9.62964972193618e-35*torch.sin(q[:, 1])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 9.70488136038881e-35*torch.sin(q[:, 1])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.00274540589655123*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.0129505310751927*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 0.00113302465571956*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.03138013298989*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 3, 0] = 5.33675006916149e-18
        J[:, 3, 1] = 1.0*torch.sin(q[:, 0]) - 6.0999332417281e-17*torch.cos(q[:, 0])
        J[:, 3, 2] = 1.0*(6.0999332417281e-17*torch.sin(q[:, 0]) + 1.0*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) + 5.33675006916149e-18*torch.sin(q[:, 1])
        J[:, 3, 3] = 1.0*(6.0999332417281e-17*torch.sin(q[:, 0]) + 1.0*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) + 5.33675006916149e-18*torch.sin(q[:, 1])
        J[:, 4, 0] = -0.0871557427476582
        J[:, 4, 1] = 6.12323399573677e-17*torch.sin(q[:, 0]) + 0.996194698091746*torch.cos(q[:, 0])
        J[:, 4, 2] = -1.0*(0.996194698091746*torch.sin(q[:, 0]) - 6.12323399573677e-17*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) - 0.0871557427476582*torch.sin(q[:, 1])
        J[:, 4, 3] = -1.0*(0.996194698091746*torch.sin(q[:, 0]) - 6.12323399573677e-17*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) - 0.0871557427476582*torch.sin(q[:, 1])
        J[:, 5, 0] = -0.996194698091746
        J[:, 5, 1] = -0.0871557427476582*torch.cos(q[:, 0])
        J[:, 5, 2] = 0.0871557427476582*torch.sin(q[:, 0])*torch.cos(q[:, 1]) - 0.996194698091746*torch.sin(q[:, 1])
        J[:, 5, 3] = 0.0871557427476582*torch.sin(q[:, 0])*torch.cos(q[:, 1]) - 0.996194698091746*torch.sin(q[:, 1])
    elif link_name == 'oya_ee':
        J[:, 0, 0] = -0.0514*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 0.0615*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.013*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 7.92991321424653e-19*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) - 1.12481983699639e-34*torch.sin(q[:, 0])*torch.cos(q[:, 1]) + 3.13536568624824e-18*torch.sin(q[:, 0])*torch.cos(q[:, 2]) + 3.75145894366278e-18*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.005*torch.sin(q[:, 0]) + 3.13536568624824e-18*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 3.75145894366278e-18*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 7.92991321424653e-19*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.013*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 8.67361737988404e-19*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 6.86132591464948e-51*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 0.0514*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 0.0615*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.0576*torch.cos(q[:, 0]) + 2.16840434497101e-19*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 1.30104260698261e-18
        J[:, 0, 1] = -8.67361737988404e-19*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 2.16840434497101e-19*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 6.86132591464948e-51*torch.sin(q[:, 0])*torch.sin(q[:, 1]) + 3.13536568624824e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) + 3.75145894366278e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 2.6727647100922e-51*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 4.81482486096809e-35*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 9.62964972193618e-35*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 1.88649197188794e-20*torch.sin(q[:, 0])*torch.cos(q[:, 0]) - 7.92991321424653e-19*torch.sin(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 9.62964972193618e-35*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0])**2 + 2.74308953554901e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2]) + 4.81482486096809e-35*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])**2 + 3.28210129253432e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 1.12481983699639e-34*torch.sin(q[:, 1])*torch.cos(q[:, 0]) - 6.93777508990994e-20*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.0514*torch.sin(q[:, 2])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 2.16840434497101e-19*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])**2 + 0.0615*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 1.48368246027497e-67*torch.cos(q[:, 0])**2*torch.cos(q[:, 1]) + 8.67361737988404e-19*torch.cos(q[:, 0])**2*torch.cos(q[:, 2] + q[:, 3]) - 4.33680868994202e-19*torch.cos(q[:, 0])**2 - 0.013*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 6.00288234288472e-52*torch.cos(q[:, 1])
        J[:, 0, 2] = (1.0*(0.996194698091746*torch.sin(q[:, 0]) - 6.12323399573677e-17*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) + 0.0871557427476582*torch.sin(q[:, 1]))*(-0.00447980517722963*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 0.00536007817898098*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.00113302465571956*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 9.80345083507205e-36*torch.sin(q[:, 0])*torch.cos(q[:, 1]) + 1.12053955792423e-34*torch.sin(q[:, 1]) - 0.0512044074819157*torch.sin(q[:, 2])*torch.cos(q[:, 1]) + 0.00113302465571956*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 0.0612659739326424*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 0.00447980517722963*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 0.00536007817898098*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.0129505310751927*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])) - (0.0871557427476582*torch.sin(q[:, 0])*torch.cos(q[:, 1]) - 0.996194698091746*torch.sin(q[:, 1]))*(-0.0512044074819157*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 0.0612659739326424*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.0129505310751927*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 7.9602041944578e-19*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) - 1.12053955792423e-34*torch.sin(q[:, 0])*torch.cos(q[:, 1]) + 3.1473422738087e-18*torch.sin(q[:, 0])*torch.cos(q[:, 2]) + 3.76578890737811e-18*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 3.1473422738087e-18*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 3.76578890737811e-18*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 7.9602041944578e-19*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 9.80345083507205e-36*torch.sin(q[:, 1]) + 0.00447980517722963*torch.sin(q[:, 2])*torch.cos(q[:, 1]) + 0.0129505310751927*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.00536007817898098*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 6.8875350649754e-51*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 0.0512044074819157*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 0.0612659739326424*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.00113302465571956*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]))
        J[:, 0, 3] = (1.0*(0.996194698091746*torch.sin(q[:, 0]) - 6.12323399573677e-17*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) + 0.0871557427476582*torch.sin(q[:, 1]))*(-0.00536007817898098*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.00113302465571956*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 9.80345083507205e-36*torch.sin(q[:, 0])*torch.cos(q[:, 1]) + 1.12053955792423e-34*torch.sin(q[:, 1]) + 0.00113302465571956*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 0.0612659739326424*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 0.00536007817898098*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.0129505310751927*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])) - (0.0871557427476582*torch.sin(q[:, 0])*torch.cos(q[:, 1]) - 0.996194698091746*torch.sin(q[:, 1]))*(-0.0612659739326424*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.0129505310751927*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 7.9602041944578e-19*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) - 1.12053955792423e-34*torch.sin(q[:, 0])*torch.cos(q[:, 1]) + 3.76578890737811e-18*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 3.76578890737811e-18*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 7.9602041944578e-19*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 9.80345083507205e-36*torch.sin(q[:, 1]) + 0.0129505310751927*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.00536007817898098*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 6.8875350649754e-51*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 0.0612659739326424*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.00113302465571956*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]))
        J[:, 1, 0] = -3.1473422738087e-18*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 3.76578890737811e-18*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 7.9602041944578e-19*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 0.0129505310751927*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) - 6.8875350649754e-51*torch.sin(q[:, 0])*torch.cos(q[:, 1]) - 0.0512044074819157*torch.sin(q[:, 0])*torch.cos(q[:, 2]) - 0.0612659739326424*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.0573808146100845*torch.sin(q[:, 0]) - 0.0512044074819157*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) - 0.0612659739326424*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.0129505310751927*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 7.41841230137484e-68*torch.sin(q[:, 1]) + 7.9602041944578e-19*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 1.12053955792423e-34*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 3.1473422738087e-18*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 3.76578890737811e-18*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.00498097349045872*torch.cos(q[:, 0]) + 1.43543937346365e-19
        J[:, 1, 1] = 4.81482486096809e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) - 3.61111864572607e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 1.12053955792423e-34*torch.sin(q[:, 0])*torch.sin(q[:, 1]) - 0.0512044074819157*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) - 0.0612659739326424*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 8.67361737988403e-19*torch.sin(q[:, 0])*torch.cos(q[:, 0]) + 0.0129505310751927*torch.sin(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 0.00447980517722963*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 0.00536007817898098*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 6.8875350649754e-51*torch.sin(q[:, 1])*torch.cos(q[:, 0]) + 0.00113302465571956*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 3.1473422738087e-18*torch.sin(q[:, 2])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 3.61111864572607e-35*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])**2 + 3.76578890737811e-18*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 4.81482486096809e-35*torch.cos(q[:, 0])**2*torch.cos(q[:, 2]) - 1.8505469088449e-20*torch.cos(q[:, 0])**2 - 7.9602041944578e-19*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 9.80345083507205e-36*torch.cos(q[:, 1])
        J[:, 1, 2] = -4.81482486096809e-35*torch.sin(q[:, 0])**2*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) + 3.61111864572607e-35*torch.sin(q[:, 0])**2*torch.sin(q[:, 1])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 2.88889491658085e-34*torch.sin(q[:, 0])*torch.sin(q[:, 1])**2*torch.cos(q[:, 2] + q[:, 3]) - 0.0129505310751927*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 1.18694596821997e-66*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 1]) - 0.0512044074819157*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2]) - 0.0612659739326424*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 3.1473422738087e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2]) + 3.61111864572607e-35*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 3.76578890737811e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) + 4.81482486096809e-35*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2]) + 7.9602041944578e-19*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 1.48368246027497e-67*torch.sin(q[:, 1])**2 + 7.96020419445779e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 2.13821176807376e-50*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 3.1473422738087e-18*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 3.76578890737811e-18*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.0512044074819157*torch.sin(q[:, 2])*torch.cos(q[:, 0]) - 0.0612659739326424*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.00113302465571956*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 0.0129505310751927*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.00447980517722963*torch.cos(q[:, 1])*torch.cos(q[:, 2]) + 0.00536007817898098*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 1, 3] = 3.61111864572607e-35*torch.sin(q[:, 0])**2*torch.sin(q[:, 1])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 2.88889491658085e-34*torch.sin(q[:, 0])*torch.sin(q[:, 1])**2*torch.cos(q[:, 2] + q[:, 3]) - 0.0129505310751927*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) - 1.18694596821997e-66*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 1]) - 0.0612659739326424*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 3.61111864572607e-35*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 3.76578890737811e-18*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) + 7.9602041944578e-19*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 1.48368246027497e-67*torch.sin(q[:, 1])**2 + 7.96020419445779e-19*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 2.13821176807376e-50*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 3.76578890737811e-18*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 0.0612659739326424*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.00113302465571956*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 0.0129505310751927*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.00536007817898098*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 2, 0] = 4.81482486096809e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 1.20370621524202e-35*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.00113302465571956*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3]) + 0.00447980517722963*torch.sin(q[:, 0])*torch.cos(q[:, 2]) + 0.00536007817898098*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 0.00502017078226511*torch.sin(q[:, 0]) + 0.00447980517722963*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 0.00536007817898098*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 0.00113302465571956*torch.sin(q[:, 1])*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) - 1.20370621524202e-35*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 6.01853107621011e-36*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) + 9.80345083507205e-36*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 4.81482486096809e-35*torch.cos(q[:, 0])*torch.cos(q[:, 2]) + 0.000435778713738291*torch.cos(q[:, 0]) - 1.25584672356824e-20
        J[:, 2, 1] = 1.54074395550979e-33*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 9.80345083507205e-36*torch.sin(q[:, 0])*torch.sin(q[:, 1]) + 0.00447980517722963*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1]) + 0.00536007817898098*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 0.00113302465571956*torch.sin(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 0.0512044074819157*torch.sin(q[:, 1])*torch.sin(q[:, 2]) - 0.0612659739326424*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 0.0129505310751927*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 4.81482486096809e-35*torch.sin(q[:, 2])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) - 7.70371977754894e-34*torch.cos(q[:, 0])**2*torch.cos(q[:, 2] + q[:, 3]) + 4.93219968889981e-21*torch.cos(q[:, 0])**2 + 1.20370621524202e-35*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 1.12053955792423e-34*torch.cos(q[:, 1]) - 2.16450679257004e-19
        J[:, 2, 2] = 0.00113302465571956*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 1.48368246027497e-67*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 1]) + 0.00447980517722963*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2]) + 0.00536007817898098*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 4.81482486096809e-35*torch.sin(q[:, 0])*torch.sin(q[:, 2])*torch.cos(q[:, 1])**2 + 3.85185988877447e-34*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 2.13821176807376e-50*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])**2 + 1.54074395550979e-33*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2]) + 1.54074395550979e-33*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 3.61111864572607e-35*torch.sin(q[:, 0])*torch.cos(q[:, 1])**2*torch.cos(q[:, 2] + q[:, 3]) + 2.40741243048404e-35*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 7.70371977754894e-34*torch.sin(q[:, 1])*torch.sin(q[:, 2])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1]) + 1.54074395550979e-33*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1]) + 2.40741243048404e-35*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 7.76390508831104e-34*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 3.85185988877447e-34*torch.sin(q[:, 1])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 2.88889491658085e-34*torch.sin(q[:, 1])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.00447980517722963*torch.sin(q[:, 2])*torch.cos(q[:, 0]) + 0.00536007817898098*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.0129505310751927*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 0.00113302465571956*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 1.18694596821997e-66*torch.cos(q[:, 1])**2 + 0.0512044074819157*torch.cos(q[:, 1])*torch.cos(q[:, 2]) + 0.0612659739326424*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 2, 3] = 0.00113302465571956*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3]) + 1.48368246027497e-67*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 1]) + 0.00536007817898098*torch.sin(q[:, 0])*torch.sin(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 3.85185988877447e-34*torch.sin(q[:, 0])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])*torch.cos(q[:, 1]) + 2.13821176807376e-50*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])**2 + 1.54074395550979e-33*torch.sin(q[:, 0])*torch.cos(q[:, 0])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) - 3.61111864572607e-35*torch.sin(q[:, 0])*torch.cos(q[:, 1])**2*torch.cos(q[:, 2] + q[:, 3]) + 2.40741243048404e-35*torch.sin(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 1.54074395550979e-33*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1]) + 2.40741243048404e-35*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) - 7.76390508831104e-34*torch.sin(q[:, 1])*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 3.85185988877447e-34*torch.sin(q[:, 1])*torch.cos(q[:, 0])**2*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 2.88889491658085e-34*torch.sin(q[:, 1])*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3]) + 0.00536007817898098*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 0]) + 0.0129505310751927*torch.sin(q[:, 2] + q[:, 3])*torch.cos(q[:, 1]) - 0.00113302465571956*torch.cos(q[:, 0])*torch.cos(q[:, 2] + q[:, 3]) + 1.18694596821997e-66*torch.cos(q[:, 1])**2 + 0.0612659739326424*torch.cos(q[:, 1])*torch.cos(q[:, 2] + q[:, 3])
        J[:, 3, 0] = 5.33675006916149e-18
        J[:, 3, 1] = 1.0*torch.sin(q[:, 0]) - 6.0999332417281e-17*torch.cos(q[:, 0])
        J[:, 3, 2] = 1.0*(6.0999332417281e-17*torch.sin(q[:, 0]) + 1.0*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) + 5.33675006916149e-18*torch.sin(q[:, 1])
        J[:, 3, 3] = 1.0*(6.0999332417281e-17*torch.sin(q[:, 0]) + 1.0*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) + 5.33675006916149e-18*torch.sin(q[:, 1])
        J[:, 4, 0] = -0.0871557427476582
        J[:, 4, 1] = 6.12323399573677e-17*torch.sin(q[:, 0]) + 0.996194698091746*torch.cos(q[:, 0])
        J[:, 4, 2] = -1.0*(0.996194698091746*torch.sin(q[:, 0]) - 6.12323399573677e-17*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) - 0.0871557427476582*torch.sin(q[:, 1])
        J[:, 4, 3] = -1.0*(0.996194698091746*torch.sin(q[:, 0]) - 6.12323399573677e-17*torch.cos(q[:, 0]))*torch.cos(q[:, 1]) - 0.0871557427476582*torch.sin(q[:, 1])
        J[:, 5, 0] = -0.996194698091746
        J[:, 5, 1] = -0.0871557427476582*torch.cos(q[:, 0])
        J[:, 5, 2] = 0.0871557427476582*torch.sin(q[:, 0])*torch.cos(q[:, 1]) - 0.996194698091746*torch.sin(q[:, 1])
        J[:, 5, 3] = 0.0871557427476582*torch.sin(q[:, 0])*torch.cos(q[:, 1]) - 0.996194698091746*torch.sin(q[:, 1])
    elif link_name == 'oya_ee':
        pass  # End effector with empty block
    else:
        raise ValueError(f"Unknown link name {link_name} for thumb finger")

    # Return the Jacobian matrix
    return J

@lru_cache(maxsize=128)
def thumb_jacobian_single(q_tuple: Tuple[float, ...], link_name: str) -> torch.Tensor:
    """Cached Jacobian implementation for single joint configuration."""
    q = torch.tensor([q_tuple], dtype=torch.float32)
    return thumb_jacobian_impl(q, link_name)[0]

def thumb_jacobian(q: torch.Tensor, link_name: Optional[str] = None, device: Optional[torch.device] = None) -> torch.Tensor:
    """
    Jacobian calculation for the thumb finger with PyTorch.

    Args:
        q: Joint angles in radians, shape [batch_size, 4] or [4]
        link_name: Optional name of the link to compute Jacobian for
        device: Optional device for computation (CPU/GPU)

    Returns:
        Jacobian matrix of shape [batch_size, 6, 4] or [6, 4]

    Notes:
        Defaults to end effector link if link_name is not specified.
    """
    # Input validation
    if q.shape[-1] != 4:
        raise ValueError(f"Expected 4 joint values, got {q.shape[-1]}")

    # Handle device placement
    if device is None:
        device = q.device if torch.is_tensor(q) else torch.device('cpu')
    elif torch.is_tensor(q) and q.device != device:
        q = q.to(device)

    # Default to end effector if not specified
    if link_name is None or link_name == '':
        link_name = 'oya_ee'

    # Handle various input formats
    unbatched = False
    if not torch.is_tensor(q):
        q = torch.tensor(q, dtype=torch.float32, device=device)

    if q.dim() == 1:
        unbatched = True
        q_tuple = tuple(q.cpu().numpy().tolist())
        return thumb_jacobian_single(q_tuple, link_name).to(device)

    if q.dim() != 2:
        q = q.reshape(-1, 4)

    # Call implementation function
    J = thumb_jacobian_impl(q, link_name)

    # Handle unbatched case
    return J.squeeze(0) if unbatched else J
